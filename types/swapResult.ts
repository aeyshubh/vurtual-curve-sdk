/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU128Decoder,
  getU128Encoder,
  getU64Decoder,
  getU64Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

/** Encodes all results of swapping */
export type SwapResult = {
  actualInputAmount: bigint;
  outputAmount: bigint;
  nextSqrtPrice: bigint;
  tradingFee: bigint;
  protocolFee: bigint;
  referralFee: bigint;
};

export type SwapResultArgs = {
  actualInputAmount: number | bigint;
  outputAmount: number | bigint;
  nextSqrtPrice: number | bigint;
  tradingFee: number | bigint;
  protocolFee: number | bigint;
  referralFee: number | bigint;
};

export function getSwapResultEncoder(): Encoder<SwapResultArgs> {
  return getStructEncoder([
    ['actualInputAmount', getU64Encoder()],
    ['outputAmount', getU64Encoder()],
    ['nextSqrtPrice', getU128Encoder()],
    ['tradingFee', getU64Encoder()],
    ['protocolFee', getU64Encoder()],
    ['referralFee', getU64Encoder()],
  ]);
}

export function getSwapResultDecoder(): Decoder<SwapResult> {
  return getStructDecoder([
    ['actualInputAmount', getU64Decoder()],
    ['outputAmount', getU64Decoder()],
    ['nextSqrtPrice', getU128Decoder()],
    ['tradingFee', getU64Decoder()],
    ['protocolFee', getU64Decoder()],
    ['referralFee', getU64Decoder()],
  ]);
}

export function getSwapResultCodec(): Codec<SwapResultArgs, SwapResult> {
  return combineCodec(getSwapResultEncoder(), getSwapResultDecoder());
}
