/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU128Decoder,
  getU128Encoder,
  getU16Decoder,
  getU16Encoder,
  getU32Decoder,
  getU32Encoder,
  getU8Decoder,
  getU8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type DynamicFeeConfig = {
  initialized: number;
  padding: ReadonlyUint8Array;
  maxVolatilityAccumulator: number;
  variableFeeControl: number;
  binStep: number;
  filterPeriod: number;
  decayPeriod: number;
  reductionFactor: number;
  padding2: ReadonlyUint8Array;
  binStepU128: bigint;
};

export type DynamicFeeConfigArgs = {
  initialized: number;
  padding: ReadonlyUint8Array;
  maxVolatilityAccumulator: number;
  variableFeeControl: number;
  binStep: number;
  filterPeriod: number;
  decayPeriod: number;
  reductionFactor: number;
  padding2: ReadonlyUint8Array;
  binStepU128: number | bigint;
};

export function getDynamicFeeConfigEncoder(): Encoder<DynamicFeeConfigArgs> {
  return getStructEncoder([
    ['initialized', getU8Encoder()],
    ['padding', fixEncoderSize(getBytesEncoder(), 7)],
    ['maxVolatilityAccumulator', getU32Encoder()],
    ['variableFeeControl', getU32Encoder()],
    ['binStep', getU16Encoder()],
    ['filterPeriod', getU16Encoder()],
    ['decayPeriod', getU16Encoder()],
    ['reductionFactor', getU16Encoder()],
    ['padding2', fixEncoderSize(getBytesEncoder(), 8)],
    ['binStepU128', getU128Encoder()],
  ]);
}

export function getDynamicFeeConfigDecoder(): Decoder<DynamicFeeConfig> {
  return getStructDecoder([
    ['initialized', getU8Decoder()],
    ['padding', fixDecoderSize(getBytesDecoder(), 7)],
    ['maxVolatilityAccumulator', getU32Decoder()],
    ['variableFeeControl', getU32Decoder()],
    ['binStep', getU16Decoder()],
    ['filterPeriod', getU16Decoder()],
    ['decayPeriod', getU16Decoder()],
    ['reductionFactor', getU16Decoder()],
    ['padding2', fixDecoderSize(getBytesDecoder(), 8)],
    ['binStepU128', getU128Decoder()],
  ]);
}

export function getDynamicFeeConfigCodec(): Codec<
  DynamicFeeConfigArgs,
  DynamicFeeConfig
> {
  return combineCodec(
    getDynamicFeeConfigEncoder(),
    getDynamicFeeConfigDecoder()
  );
}
