/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  isProgramError,
  type Address,
  type SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,
  type SolanaError,
} from '@solana/kit';
import { VIRTUAL_CURVE_PROGRAM_ADDRESS } from '../programs';

/** MathOverflow: Math operation overflow */
export const VIRTUAL_CURVE_ERROR__MATH_OVERFLOW = 0x1770; // 6000
/** InvalidFee: Invalid fee setup */
export const VIRTUAL_CURVE_ERROR__INVALID_FEE = 0x1771; // 6001
/** ExceededSlippage: Exceeded slippage tolerance */
export const VIRTUAL_CURVE_ERROR__EXCEEDED_SLIPPAGE = 0x1772; // 6002
/** ExceedMaxFeeBps: Exceeded max fee bps */
export const VIRTUAL_CURVE_ERROR__EXCEED_MAX_FEE_BPS = 0x1773; // 6003
/** InvalidAdmin: Invalid admin */
export const VIRTUAL_CURVE_ERROR__INVALID_ADMIN = 0x1774; // 6004
/** AmountIsZero: Amount is zero */
export const VIRTUAL_CURVE_ERROR__AMOUNT_IS_ZERO = 0x1775; // 6005
/** TypeCastFailed: Type cast error */
export const VIRTUAL_CURVE_ERROR__TYPE_CAST_FAILED = 0x1776; // 6006
/** InvalidActivationType: Invalid activation type */
export const VIRTUAL_CURVE_ERROR__INVALID_ACTIVATION_TYPE = 0x1777; // 6007
/** InvalidQuoteMint: Invalid quote mint */
export const VIRTUAL_CURVE_ERROR__INVALID_QUOTE_MINT = 0x1778; // 6008
/** InvalidParameters: Invalid parameters */
export const VIRTUAL_CURVE_ERROR__INVALID_PARAMETERS = 0x1779; // 6009
/** InvalidCollectFeeMode: Invalid collect fee mode */
export const VIRTUAL_CURVE_ERROR__INVALID_COLLECT_FEE_MODE = 0x177a; // 6010
/** InvalidInput: Invalid input */
export const VIRTUAL_CURVE_ERROR__INVALID_INPUT = 0x177b; // 6011
/** InvalidExtension: Invalid extension */
export const VIRTUAL_CURVE_ERROR__INVALID_EXTENSION = 0x177c; // 6012
/** FeeInverseIsIncorrect: Fee inverse is incorrect */
export const VIRTUAL_CURVE_ERROR__FEE_INVERSE_IS_INCORRECT = 0x177d; // 6013
/** NotEnoughLiquidity: Not enough liquidity */
export const VIRTUAL_CURVE_ERROR__NOT_ENOUGH_LIQUIDITY = 0x177e; // 6014
/** PoolIsCompleted: Pool is completed */
export const VIRTUAL_CURVE_ERROR__POOL_IS_COMPLETED = 0x177f; // 6015
/** PoolIsIncompleted: Pool is incompleted */
export const VIRTUAL_CURVE_ERROR__POOL_IS_INCOMPLETED = 0x1780; // 6016
/** InvalidMigrationOption: Invalid migration option */
export const VIRTUAL_CURVE_ERROR__INVALID_MIGRATION_OPTION = 0x1781; // 6017
/** InvalidTokenDecimals: Invalid activation type */
export const VIRTUAL_CURVE_ERROR__INVALID_TOKEN_DECIMALS = 0x1782; // 6018
/** InvalidTokenType: Invalid token type */
export const VIRTUAL_CURVE_ERROR__INVALID_TOKEN_TYPE = 0x1783; // 6019
/** InvalidFeePercentage: Invalid fee percentage */
export const VIRTUAL_CURVE_ERROR__INVALID_FEE_PERCENTAGE = 0x1784; // 6020
/** InvalidQuoteThreshold: Invalid quote threshold */
export const VIRTUAL_CURVE_ERROR__INVALID_QUOTE_THRESHOLD = 0x1785; // 6021
/** InvalidCurve: Invalid curve */
export const VIRTUAL_CURVE_ERROR__INVALID_CURVE = 0x1786; // 6022
/** NotPermitToDoThisAction: Not permit to do this action */
export const VIRTUAL_CURVE_ERROR__NOT_PERMIT_TO_DO_THIS_ACTION = 0x1787; // 6023
/** InvalidPartnerAccount: Invalid partner account */
export const VIRTUAL_CURVE_ERROR__INVALID_PARTNER_ACCOUNT = 0x1788; // 6024
/** InvalidOwnerAccount: Invalid owner account */
export const VIRTUAL_CURVE_ERROR__INVALID_OWNER_ACCOUNT = 0x1789; // 6025
/** InvalidConfigAccount: Invalid config account */
export const VIRTUAL_CURVE_ERROR__INVALID_CONFIG_ACCOUNT = 0x178a; // 6026
/** SurplusHasBeenWithdraw: Surplus has been withdraw */
export const VIRTUAL_CURVE_ERROR__SURPLUS_HAS_BEEN_WITHDRAW = 0x178b; // 6027
/** TotalBaseTokenExceedMaxSupply: Total base token is exceeded max supply */
export const VIRTUAL_CURVE_ERROR__TOTAL_BASE_TOKEN_EXCEED_MAX_SUPPLY = 0x178c; // 6028
/** UnsupportNativeMintToken2022: Unsupport native mint token 2022 */
export const VIRTUAL_CURVE_ERROR__UNSUPPORT_NATIVE_MINT_TOKEN2022 = 0x178d; // 6029
/** InsufficentLiquidityForMigration: Insufficent liquidity for migration */
export const VIRTUAL_CURVE_ERROR__INSUFFICENT_LIQUIDITY_FOR_MIGRATION = 0x178e; // 6030

export type VirtualCurveError =
  | typeof VIRTUAL_CURVE_ERROR__AMOUNT_IS_ZERO
  | typeof VIRTUAL_CURVE_ERROR__EXCEEDED_SLIPPAGE
  | typeof VIRTUAL_CURVE_ERROR__EXCEED_MAX_FEE_BPS
  | typeof VIRTUAL_CURVE_ERROR__FEE_INVERSE_IS_INCORRECT
  | typeof VIRTUAL_CURVE_ERROR__INSUFFICENT_LIQUIDITY_FOR_MIGRATION
  | typeof VIRTUAL_CURVE_ERROR__INVALID_ACTIVATION_TYPE
  | typeof VIRTUAL_CURVE_ERROR__INVALID_ADMIN
  | typeof VIRTUAL_CURVE_ERROR__INVALID_COLLECT_FEE_MODE
  | typeof VIRTUAL_CURVE_ERROR__INVALID_CONFIG_ACCOUNT
  | typeof VIRTUAL_CURVE_ERROR__INVALID_CURVE
  | typeof VIRTUAL_CURVE_ERROR__INVALID_EXTENSION
  | typeof VIRTUAL_CURVE_ERROR__INVALID_FEE
  | typeof VIRTUAL_CURVE_ERROR__INVALID_FEE_PERCENTAGE
  | typeof VIRTUAL_CURVE_ERROR__INVALID_INPUT
  | typeof VIRTUAL_CURVE_ERROR__INVALID_MIGRATION_OPTION
  | typeof VIRTUAL_CURVE_ERROR__INVALID_OWNER_ACCOUNT
  | typeof VIRTUAL_CURVE_ERROR__INVALID_PARAMETERS
  | typeof VIRTUAL_CURVE_ERROR__INVALID_PARTNER_ACCOUNT
  | typeof VIRTUAL_CURVE_ERROR__INVALID_QUOTE_MINT
  | typeof VIRTUAL_CURVE_ERROR__INVALID_QUOTE_THRESHOLD
  | typeof VIRTUAL_CURVE_ERROR__INVALID_TOKEN_DECIMALS
  | typeof VIRTUAL_CURVE_ERROR__INVALID_TOKEN_TYPE
  | typeof VIRTUAL_CURVE_ERROR__MATH_OVERFLOW
  | typeof VIRTUAL_CURVE_ERROR__NOT_ENOUGH_LIQUIDITY
  | typeof VIRTUAL_CURVE_ERROR__NOT_PERMIT_TO_DO_THIS_ACTION
  | typeof VIRTUAL_CURVE_ERROR__POOL_IS_COMPLETED
  | typeof VIRTUAL_CURVE_ERROR__POOL_IS_INCOMPLETED
  | typeof VIRTUAL_CURVE_ERROR__SURPLUS_HAS_BEEN_WITHDRAW
  | typeof VIRTUAL_CURVE_ERROR__TOTAL_BASE_TOKEN_EXCEED_MAX_SUPPLY
  | typeof VIRTUAL_CURVE_ERROR__TYPE_CAST_FAILED
  | typeof VIRTUAL_CURVE_ERROR__UNSUPPORT_NATIVE_MINT_TOKEN2022;

let virtualCurveErrorMessages: Record<VirtualCurveError, string> | undefined;
if (process.env.NODE_ENV !== 'production') {
  virtualCurveErrorMessages = {
    [VIRTUAL_CURVE_ERROR__AMOUNT_IS_ZERO]: `Amount is zero`,
    [VIRTUAL_CURVE_ERROR__EXCEEDED_SLIPPAGE]: `Exceeded slippage tolerance`,
    [VIRTUAL_CURVE_ERROR__EXCEED_MAX_FEE_BPS]: `Exceeded max fee bps`,
    [VIRTUAL_CURVE_ERROR__FEE_INVERSE_IS_INCORRECT]: `Fee inverse is incorrect`,
    [VIRTUAL_CURVE_ERROR__INSUFFICENT_LIQUIDITY_FOR_MIGRATION]: `Insufficent liquidity for migration`,
    [VIRTUAL_CURVE_ERROR__INVALID_ACTIVATION_TYPE]: `Invalid activation type`,
    [VIRTUAL_CURVE_ERROR__INVALID_ADMIN]: `Invalid admin`,
    [VIRTUAL_CURVE_ERROR__INVALID_COLLECT_FEE_MODE]: `Invalid collect fee mode`,
    [VIRTUAL_CURVE_ERROR__INVALID_CONFIG_ACCOUNT]: `Invalid config account`,
    [VIRTUAL_CURVE_ERROR__INVALID_CURVE]: `Invalid curve`,
    [VIRTUAL_CURVE_ERROR__INVALID_EXTENSION]: `Invalid extension`,
    [VIRTUAL_CURVE_ERROR__INVALID_FEE]: `Invalid fee setup`,
    [VIRTUAL_CURVE_ERROR__INVALID_FEE_PERCENTAGE]: `Invalid fee percentage`,
    [VIRTUAL_CURVE_ERROR__INVALID_INPUT]: `Invalid input`,
    [VIRTUAL_CURVE_ERROR__INVALID_MIGRATION_OPTION]: `Invalid migration option`,
    [VIRTUAL_CURVE_ERROR__INVALID_OWNER_ACCOUNT]: `Invalid owner account`,
    [VIRTUAL_CURVE_ERROR__INVALID_PARAMETERS]: `Invalid parameters`,
    [VIRTUAL_CURVE_ERROR__INVALID_PARTNER_ACCOUNT]: `Invalid partner account`,
    [VIRTUAL_CURVE_ERROR__INVALID_QUOTE_MINT]: `Invalid quote mint`,
    [VIRTUAL_CURVE_ERROR__INVALID_QUOTE_THRESHOLD]: `Invalid quote threshold`,
    [VIRTUAL_CURVE_ERROR__INVALID_TOKEN_DECIMALS]: `Invalid activation type`,
    [VIRTUAL_CURVE_ERROR__INVALID_TOKEN_TYPE]: `Invalid token type`,
    [VIRTUAL_CURVE_ERROR__MATH_OVERFLOW]: `Math operation overflow`,
    [VIRTUAL_CURVE_ERROR__NOT_ENOUGH_LIQUIDITY]: `Not enough liquidity`,
    [VIRTUAL_CURVE_ERROR__NOT_PERMIT_TO_DO_THIS_ACTION]: `Not permit to do this action`,
    [VIRTUAL_CURVE_ERROR__POOL_IS_COMPLETED]: `Pool is completed`,
    [VIRTUAL_CURVE_ERROR__POOL_IS_INCOMPLETED]: `Pool is incompleted`,
    [VIRTUAL_CURVE_ERROR__SURPLUS_HAS_BEEN_WITHDRAW]: `Surplus has been withdraw`,
    [VIRTUAL_CURVE_ERROR__TOTAL_BASE_TOKEN_EXCEED_MAX_SUPPLY]: `Total base token is exceeded max supply`,
    [VIRTUAL_CURVE_ERROR__TYPE_CAST_FAILED]: `Type cast error`,
    [VIRTUAL_CURVE_ERROR__UNSUPPORT_NATIVE_MINT_TOKEN2022]: `Unsupport native mint token 2022`,
  };
}

export function getVirtualCurveErrorMessage(code: VirtualCurveError): string {
  if (process.env.NODE_ENV !== 'production') {
    return (virtualCurveErrorMessages as Record<VirtualCurveError, string>)[
      code
    ];
  }

  return 'Error message not available in production bundles.';
}

export function isVirtualCurveError<
  TProgramErrorCode extends VirtualCurveError,
>(
  error: unknown,
  transactionMessage: {
    instructions: Record<number, { programAddress: Address }>;
  },
  code?: TProgramErrorCode
): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> &
  Readonly<{ context: Readonly<{ code: TProgramErrorCode }> }> {
  return isProgramError<TProgramErrorCode>(
    error,
    transactionMessage,
    VIRTUAL_CURVE_PROGRAM_ADDRESS,
    code
  );
}
